<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserDao">
    <resultMap id="t_user" type="com.model.User">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="type_id" property="t_id" jdbcType="TINYINT"/>
        <result column="password" property="userPwd" jdbcType="VARCHAR"/>
        <result column="name" property="userName" jdbcType="VARCHAR"/>
        <result column="gender" property="userGender" jdbcType="TINYINT"/>
        <result column="email" property="userEmail" jdbcType="VARCHAR"/>
        <result column="phone" property="userPhone" jdbcType="VARCHAR"/>
        <result column="address" property="userAddress" jdbcType="VARCHAR"/>
        <result column="time" property="Time" jdbcType="DATE"/>
        <result column="comfort" property="userComfort" jdbcType="DOUBLE"/>
        <result column="uid" property="userUid" jdbcType="VARCHAR"/>
        <result column="mid" property="userMid" jdbcType="VARCHAR"/>
        <result column="mac" property="userMac" jdbcType="VARCHAR"/>
        <result column="age" property="userAge" jdbcType="VARCHAR"/>
        <result column="first_calibtime" property="userCalibtime" jdbcType="DATE"/>
        <result column="comfortA_1" property="userComfortA1" jdbcType="DOUBLE"/>
        <result column="comfortA_2" property="userComfortA2" jdbcType="DOUBLE"/>
        <result column="comfortA_3" property="userComfortA3" jdbcType="DOUBLE"/>
        <result column="comfortA_4" property="userComfortA4" jdbcType="DOUBLE"/>
        <result column="comfortB_1" property="userComfortB1" jdbcType="DOUBLE"/>
        <result column="comfortB_2" property="userComfortB2" jdbcType="DOUBLE"/>
        <result column="comfortB_3" property="userComfortB3" jdbcType="DOUBLE"/>
        <result column="comfortB_4" property="userComfortB4" jdbcType="DOUBLE"/>
        <result column="comfortC_1" property="userComfortC1" jdbcType="DOUBLE"/>
        <result column="comfortC_2" property="userComfortC2" jdbcType="DOUBLE"/>
        <result column="comfortC_3" property="userComfortC3" jdbcType="DOUBLE"/>
        <result column="comfortC_4" property="userComfortC4" jdbcType="DOUBLE"/>
        <result column="comfortD_1" property="userComfortD1" jdbcType="DOUBLE"/>
        <result column="comfortD_2" property="userComfortD2" jdbcType="DOUBLE"/>
        <result column="comfortD_3" property="userComfortD3" jdbcType="DOUBLE"/>
        <result column="comfortD_4" property="userComfortD4" jdbcType="DOUBLE"/>
    </resultMap>

    <resultMap id="doc" type="com.model.User" extends="t_user">
        <collection property="responsible" ofType="com.model.Responsible">
            <id property="id" column="r_id"/>
            <result property="docId" column="doc_id"/>
            <result property="patId" column="pat_id"/>
            <result property="time" column="time"/>
        </collection>
    </resultMap>

    <select id="selectDocPatient" resultMap="doc">
          SELECT
                  *
          FROM
                responsible r INNER JOIN user u ON u.id = r.doc_id WHERE r.doc_id = #{docId}

    </select>

    <select id="selectUserById" parameterType="Long" resultMap="t_user">
        SELECT * FROM user WHERE id = #{userId}
    </select>

    <select id="selectUserByUid" parameterType="String" resultMap="t_user">
        SELECT * FROM user WHERE uid = #{userUid}
    </select>

    <select id="selectUserByname" resultMap="t_user">
        SELECT * FROM user WHERE user_name = #{userName}
    </select>

    <select id="selectUserByPhone" parameterType="java.lang.String" resultMap="t_user">
        SELECT * FROM user WHERE phone = #{userPhone}
    </select>

    <select id="selectAllUser" resultMap="t_user">
        SELECT * FROM user
    </select>

    <!--验证登录名是否存在-->
    <select id="queryForLogin"  resultMap="t_user">
        SELECT * FROM user WHERE phone = #{userPhone} AND password = #{userPwd}
    </select>

    <!--修改用户信息password-->
    <update id="changeProfilePassword" parameterType="com.model.User">
        UPDATE user set password = #{userPwd} WHERE id = #{id}
    </update>

    <!--修改用户信息name-->
    <update id="changeProfile" parameterType="com.model.User">
        UPDATE user set name = #{userName} WHERE id = #{id}
    </update>

    <!--修改用户信息gender-->
    <update id="changeProfileGender" parameterType="com.model.User">
        UPDATE user set gender = #{userGender} WHERE id = #{id}
    </update>

    <!--修改用户信息email-->
    <update id="changeProfileEmail" parameterType="com.model.User">
        UPDATE user set email = #{userEmail} WHERE id = #{id}
    </update>

    <!--修改用户信息phone-->
    <update id="changeProfilePhone" parameterType="com.model.User">
        UPDATE user set phone = #{userPhone} WHERE id = #{id}
    </update>

    <!--修改用户信息address-->
    <update id="changeProfileAddress" parameterType="com.model.User">
        UPDATE user set address = #{userAddress} WHERE id = #{id}
    </update>

    <!--修改用户信息age-->
    <update id="changeProfileAge" parameterType="com.model.User">
        UPDATE user set age = #{userAge} WHERE id = #{id}
    </update>

    <!--用户绑定机器的Mid-->
    <update id="setMid" parameterType="com.model.User">
        UPDATE user SET mid = #{userMid} WHERE id = #{id}
    </update>

    <!--通过手机号和密码进行注册-->
    <insert id="insertUser" parameterType="com.model.User" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO user (password,phone,type_id,uid) VALUES (#{userPwd}, #{userPhone}, #{t_id}, #{userUid})
    </insert>

    <!--上传标定数据A-->
    <update id="upLoadA" parameterType="com.model.User">
        UPDATE user SET

        comfortA_1 = #{userComfortA1},
        comfortA_2 = #{userComfortA2},
        comfortA_3 = #{userComfortA3},
        comfortA_4 = #{userComfortA4}

        WHERE uid = #{userUid}
    </update>

    <!--上传标定数据B-->
    <update id="upLoadB" parameterType="com.model.User">
        UPDATE user SET

        comfortB_1 = #{userComfortB1},
        comfortB_2 = #{userComfortB2},
        comfortB_3 = #{userComfortB3},
        comfortB_4 = #{userComfortB4}

         WHERE uid = #{userUid}
    </update>

    <!--上传标定数据C-->
    <update id="upLoadC" parameterType="com.model.User">
        UPDATE user SET

        comfortC_1 = #{userComfortC1},
        comfortC_2 = #{userComfortC2},
        comfortC_3 = #{userComfortC3},
        comfortC_4 = #{userComfortC4}

        WHERE uid = #{userUid}
    </update>

    <!--上传标定数据D-->
    <update id="upLoadD" parameterType="com.model.User">
        UPDATE user SET

        comfortD_1 = #{userComfortD1},
        comfortD_2 = #{userComfortD2},
        comfortD_3 = #{userComfortD3},
        comfortD_4 = #{userComfortD4}

        WHERE uid = #{userUid}
    </update>

    <!--上传设备启用日期-->
    <insert id="firstCalibTime" parameterType="com.model.User">
        UPDATE user SET first_calibtime = #{userCalibtime} WHERE uid = #{userUid}
    </insert>
</mapper>